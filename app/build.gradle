apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.haotang.newpet"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //指定EventBus加速用的Index
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: "com.haotang.newpet.MyEventBusIndex"]
            }
        }
    }

    signingConfigs {
        config {
            //签名文件在项目根目录下
            //KEY_ALIAS，KEY_PASSWORD，STORE_PASSWORD写在项目根目录下的gradle.properties里
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file('../pet_new.jks')
            storePassword STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config//使用上面配置的签名进行打包
        }

        debug {
            minifyEnabled false
            signingConfig signingConfigs.config//debug模式下也使用上面配置的签名进行打包
        }
    }

    //greendao配置
    greendao {
        //数据库版本号，升级时进行修改
        schemaVersion 1
        daoPackage 'com.haotang.newpet.mvp.model.db.greendao'
        //生成的DAO，DaoMaster和DaoSession的包名。默认是实体的包名
        targetGenDir 'src/main/java' //生成源文件的路径。默认源文件目录是在build目录中的(build/generated/source/greendao)
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {//处理打包失败
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation', 'ExtraTranslation'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    compile 'com.android.support:appcompat-v7:25.3.0'
//    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.android.support:recyclerview-v7:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'

    testCompile 'junit:junit:4.12'
    compile 'com.ljy.ring:devring:+'
    //══════════════════════依赖注入(Dagger2)开始══════════════════════
    //如果你项目需要使用到dagger2，那就需要添加注解处理器的依赖
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'//用于dagger2在编译时根据注解生成相关文件
    //══════════════════════依赖注入(Dagger2)结束══════════════════════

    //══════════════════════图片加载开始══════════════════════
    //如果你需要使用Devring库的图片加载模块（默认使用Glide）,那么你需要添加Glide依赖
    //当然，你也可以用其他图片框架替换掉默认的Glide，这样的话那就不用添加Glide依赖了。
    //具体替换步骤请参考demo或使用文档，demo中演示了如何使用Fresco替换掉默认的Glide。
    //Glide
    //compile 'com.github.bumptech.glide:glide:4.4.0'

    //Fresco
    //为了演示如何使用Fresco替换掉DevRing中默认的Glide，需添加Fresco的相关依赖
    //Fresco体积较大，如果对图片加载要求不高，建议使用Glide
    compile 'com.facebook.fresco:fresco:1.5.0'
    compile 'com.facebook.fresco:animated-gif:1.5.0' //用于Fresco加载gif动图
    compile 'com.facebook.fresco:imagepipeline-okhttp3:1.3.0'//用于替换fresco的网络加载为okhttp
    compile 'jp.wasabeef:fresco-processors:2.1.0@aar'//用于提供fresco的各种图片变换
    //══════════════════════图片加载结束══════════════════════

    //══════════════════════数据库(GreenDao)开始══════════════════════
    //如果你需要使用Devring库的数据库模块（默认使用GreenDao）,那么你需要添加GreenDao依赖
    //当然，你也可以用其他数据库框架替换掉默认的GreenDao，这样的话那就不用添加GreenDao依赖了。
    //具体替换步骤请参考demo或使用文档，demo中演示了如何使用原生的数据库替换掉默认的GreenDao。
    compile 'org.greenrobot:greendao:3.2.0'
    //    api 'net.zetetic:android-database-sqlcipher:3.5.7'//使用加密数据库时需要添加，使用后会apk会变大很多，如果对安全性要求不高，不建议使用
    //══════════════════════数据库(GreenDao)结束══════════════════════

    //══════════════════════事件总线(EventBus)开始══════════════════════
    //如果你需要使用Devring库的事件总线模块（默认使用EventBus）,那么你需要添加EventBus依赖
    //当然，你也可以用其他事件总线框架替换掉默认的EventBus，这样的话那就不用添加EventBus依赖了。
    //具体替换步骤请参考demo或使用文档，demo中演示了如何使用RxBus替换掉默认的EventBus。
    compile 'org.greenrobot:eventbus:3.0.0'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.0.1'
    //用于eventbus在编译时生成加速用的Index文件
    //══════════════════════事件总线(EventBus)结束══════════════════════

    //══════════════════════资源绑定(ButterKnife)开始══════════════════════
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'//用于butterknife在编译时根据注解生成相关文件
    //══════════════════════资源绑定(ButterKnife)结束══════════════════════
}
